When testing the implementation of certain REST APIs in the backend it is necessary for the test to begin in a certain state to be able to successfully test the method implementing the REST API.  For example when testing something a user is allowed to do only after logging in one must make sure that the test begins in the login state which introduces some complications.  One needs to mock a cookie and pass it into the method as an argument to make it think the caller is already logged in. The same difficulties are experienced when testing the front end.  To be able to test certain front end functionalities using Selenium or Jasmine one needs to be logged in or logged out.   

When trying to reverse engineer a piece of software one of the main difficulties is understanding the code without having someone who has previously used the code.  When design patterns are utilized in the code one needs to have a good grasp of why those design patters are usually used for to be able to understand the code.  Trying to understand a piece of code from scratch requires a good understanding of all coding techniques hence for a beginner it could be very difficult if proper documentation is not provided or if no one is there to explain.  We ran into this problem when working on our CS427 project.  It was a bit difficult to understand the Jenkins CI source code from scratch however with help from Piazza we were finally able of figure it out. 

When having a software development process that included multiple testing stages as is the case in most situations many difficulties arise. One needs to make sure that one’s test pass on all stages before the SW can be deployed. In our CS428 projects we tested our code in three different places which were our local pc, Jenkins running on school vm, and open shift.  When introducing MySQL we ran into the difficulty of being able use the database since the database URL was different on each platform.  We were using Spring boot and we realized later that there is an easy way to do this using Spring Boot however due to not having enough time to look into this we decided to abandon MySQL and use Spring Boot’s embedded H2 database.   
